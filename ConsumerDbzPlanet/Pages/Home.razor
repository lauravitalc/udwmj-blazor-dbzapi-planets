@page "/"
@using ConsumerDbzPlanet.Models
@inject HttpClient Http

<PageTitle>Dbz</PageTitle>

<h1>Dbz Planet</h1>

<div class="form-group">
    <label for="dbz-input">
        <input type="number" id="dbz-input" class="form-control" @bind="dbzId" placeholder="Digite o ID do Planet" />
    </label>
</div>

<button class="btn btn-primary" @onclick="ConsultarDbz">Consultar API</button>

@if (planet != null)
{
    <h3>Resultado da API:</h3>
    <table class="table table-bordered">
        <tbody>
        <tr>
            <td><strong>Planeta:</strong></td>
            <td><img src="@planet.image" alt="@planet.name" /></td>
        </tr>
        <tr>
            <td><strong>Nome:</strong></td>
            <td>@planet.name</td>
        </tr>
        <tr>
            <td><strong>Descrição:</strong></td>
            <td>@planet.description</td>
        </tr>
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private int dbzId;
    private Item? planet;
    private string? errorMessage;

    private async Task ConsultarDbz()
    {
        errorMessage  = string.Empty;
        planet = null;

        if(dbzId <= 0){
            errorMessage = "Por favor, digite um ID válido.";
            return;
        }
        
        try
        {
            string url = $"https://dragonball-api.com/api/planets/{dbzId}";
            planet = await Http.GetFromJsonAsync<Item>(url);

            if (planet == null)
            {
                errorMessage = "Planeta não encontrado.";
                planet = null;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro: {ex.Message}";
        }
    }
}